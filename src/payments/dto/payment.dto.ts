import { ApiProperty, ApiPropertyOptional } from "@nestjs/swagger";
import {
  IsString,
  IsNotEmpty,
  IsNumber,
  IsOptional,
  IsEnum,
  IsDateString,
  IsUUID,
  IsObject,
} from "class-validator";

export enum PaymentStatus {
  PENDING = "pending",
  SUCCEEDED = "succeeded",
  FAILED = "failed",
  REFUNDED = "refunded",
  // VOIDED = "voided", // Example, if you need a VOIDED status
}

export class PaymentDto {
  @ApiProperty({
    description: "Payment unique identifier",
    example: "a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11",
  })
  @IsUUID()
  @IsNotEmpty()
  id: string;

  @ApiProperty({
    description: "User ID associated with the payment",
    example: "user-123",
  })
  @IsString()
  @IsNotEmpty()
  user_id: string;

  @ApiPropertyOptional({
    description: "Subscription ID if payment is for a subscription",
    example: "sub-123",
  })
  @IsString()
  @IsOptional()
  subscription_id?: string;

  @ApiProperty({ description: "Payment amount", example: 19.99 })
  @IsNumber()
  @IsNotEmpty()
  amount: number;

  @ApiProperty({ description: "Payment currency", example: "EUR" })
  @IsString()
  @IsNotEmpty()
  currency: string;

  @ApiProperty({
    description: "Payment status",
    enum: PaymentStatus,
    example: PaymentStatus.SUCCEEDED,
  })
  @IsEnum(PaymentStatus)
  @IsNotEmpty()
  status: PaymentStatus;

  @ApiPropertyOptional({ description: "Payment method used", example: "card" })
  @IsString()
  @IsOptional()
  method?: string;

  @ApiPropertyOptional({
    description: "Payment processor used",
    example: "tefpay",
  })
  @IsString()
  @IsOptional()
  processor?: string;

  @ApiPropertyOptional({
    description: "Payment ID from the processor",
    example: "pi_123456789",
  })
  @IsString()
  @IsOptional()
  processor_payment_id?: string;

  @ApiPropertyOptional({
    description: "Raw response from the payment processor",
  })
  @IsObject()
  @IsOptional()
  processor_response?: any;

  @ApiPropertyOptional({ description: "Error message if payment failed" })
  @IsString()
  @IsOptional()
  error_message?: string;

  @ApiPropertyOptional({ description: "Amount refunded", example: 0 })
  @IsNumber()
  @IsOptional()
  refunded_amount?: number;

  @ApiPropertyOptional({ description: "Reason for refund" })
  @IsString()
  @IsOptional()
  refund_reason?: string;

  @ApiPropertyOptional({ description: "Timestamp when payment was made" })
  @IsDateString()
  @IsOptional()
  paid_at?: Date;

  @ApiPropertyOptional({ description: "Timestamp when payment was refunded" })
  @IsDateString()
  @IsOptional()
  refunded_at?: Date;

  @ApiProperty({ description: "Timestamp of payment creation" })
  @IsDateString()
  @IsNotEmpty()
  createdAt: Date;

  @ApiProperty({ description: "Timestamp of last payment update" })
  @IsDateString()
  @IsNotEmpty()
  updatedAt: Date;
}

export class InitiatePaymentDto {
  @ApiProperty({
    description: "ID of the plan to subscribe to",
    example: "plan-123",
  })
  @IsString()
  @IsNotEmpty()
  plan_id: string;

  @ApiProperty({
    description: "Signature generated by the frontend for Tefpay",
    example: "abcdef1234567890",
  })
  @IsString()
  @IsNotEmpty()
  tefpay_signature: string;
}

export class InitiatePaymentResponseDto {
  @ApiProperty({ description: "Payment ID", example: "pay-123" })
  payment_id: string;

  @ApiProperty({ description: "Amount to be paid", example: 19.99 })
  amount: number;

  @ApiProperty({ description: "Currency of the payment", example: "EUR" })
  currency: string;

  @ApiProperty({
    description: "Order reference for the payment processor",
    example: "order-123",
  })
  order_reference: string;

  @ApiProperty({
    description: "URL to redirect the user to for payment processing",
    example: "https://tefpay.com/pay",
  })
  payment_processor_url: string;

  @ApiProperty({
    description: "Data/fields required by the payment processor form",
    example: { Ds_MerchantCode: "123" },
  })
  payment_processor_data: any;
}

export class CreatePaymentDto extends PaymentDto {
  // Inherits all properties from PaymentDto
  // Add any additional properties specific to creating a payment, if necessary
  // For example, if tefpay_matching_data is only provided on creation:
  @ApiPropertyOptional({
    description: "Tefpay matching data, if available at creation",
    example: "match-data-xyz",
  })
  @IsString()
  @IsOptional()
  tefpay_matching_data?: string;
}
