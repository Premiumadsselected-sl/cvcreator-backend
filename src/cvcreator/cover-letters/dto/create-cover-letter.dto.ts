import { ApiProperty, ApiPropertyOptional } from "@nestjs/swagger";
import {
  IsString,
  IsNotEmpty,
  IsOptional,
  IsBoolean,
  IsObject,
  ValidateNested,
} from "class-validator";
import { Type } from "class-transformer";
import { CoverLetterContentDto } from "./cover-letter-content.dto";

export class CreateCoverLetterDto {
  @ApiProperty({
    description: "Title of the cover letter",
    example: "Application for Product Manager",
  })
  @IsString()
  @IsNotEmpty()
  title: string;

  @ApiPropertyOptional({
    description:
      "ID of the template used for the cover letter. Send null to not use a template.",
    example: "template-cl-creative-1",
    nullable: true,
  })
  @IsString()
  @IsOptional()
  template_id?: string | null;

  @ApiProperty({
    description: "Main content of the cover letter",
    type: () => CoverLetterContentDto,
  })
  @ValidateNested()
  @Type(() => CoverLetterContentDto)
  @IsNotEmpty()
  content: CoverLetterContentDto;

  @ApiPropertyOptional({
    description:
      "Specific settings for the cover letter (e.g., font size, margins)",
    example: { fontSize: 11, margin: "1 inch" },
    type: "object",
    additionalProperties: true,
  })
  @IsObject()
  @IsOptional()
  settings?: Record<string, any>;

  @ApiPropertyOptional({
    description:
      "Indicates if the cover letter is publicly accessible. Defaults to false.",
    example: false,
    default: false,
  })
  @IsBoolean()
  @IsOptional()
  is_public?: boolean = false;

  // user_id will be injected by the service from the authenticated user.
  // slug will be generated by the service.
  // version, share_token, createdAt, updatedAt, deletedAt are handled by the service/database.
}
